// Code generated by MockGen. DO NOT EDIT.
// Source: google.go

// Package google is a generated GoMock package.
package google

import (
	gomock "github.com/golang/mock/gomock"
	v1 "google.golang.org/api/books/v1"
	reflect "reflect"
)

// MockCaller is a mock of Caller interface
type MockCaller struct {
	ctrl     *gomock.Controller
	recorder *MockCallerMockRecorder
}

// MockCallerMockRecorder is the mock recorder for MockCaller
type MockCallerMockRecorder struct {
	mock *MockCaller
}

// NewMockCaller creates a new mock instance
func NewMockCaller(ctrl *gomock.Controller) *MockCaller {
	mock := &MockCaller{ctrl: ctrl}
	mock.recorder = &MockCallerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCaller) EXPECT() *MockCallerMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockCaller) Get(isbn string) (*v1.Volumes, error) {
	ret := m.ctrl.Call(m, "Get", isbn)
	ret0, _ := ret[0].(*v1.Volumes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockCallerMockRecorder) Get(isbn interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCaller)(nil).Get), isbn)
}
