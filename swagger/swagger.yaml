consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  AddOwnershipsPayload:
    example:
      book_isbn: o4
    properties:
      book_isbn:
        description: Book ISBN
        example: o4
        maxLength: 128
        minLength: 1
        type: string
    required:
    - book_isbn
    title: AddOwnershipsPayload
    type: object
  AuthenticatePayload:
    example:
      login: ape
      password: nx102j4z5w
    properties:
      login:
        description: email or nickname
        example: ape
        minLength: 1
        type: string
      password:
        description: user password
        example: nx102j4z5w
        maxLength: 32
        minLength: 1
        type: string
    required:
    - login
    - password
    title: AuthenticatePayload
    type: object
  Author:
    description: An Author (default view)
    example:
      author_id: 1
      author_name: 8rt
      href: Autem est eaque itaque sed aut debitis.
    properties:
      author_id:
        description: Unique Author ID
        example: 1
        minimum: 1
        type: integer
      author_name:
        description: Author Name
        example: 8rt
        maxLength: 128
        minLength: 1
        type: string
      href:
        description: API href for making requests
        example: Autem est eaque itaque sed aut debitis.
        type: string
    required:
    - author_id
    - author_name
    - href
    title: 'Mediatype identifier: application/vnd.author+json; view=default'
    type: object
  AuthorCollection:
    description: AuthorCollection is the media type for an array of Author (default
      view)
    example:
    - author_id: 1
      author_name: 8rt
      href: Autem est eaque itaque sed aut debitis.
    - author_id: 1
      author_name: 8rt
      href: Autem est eaque itaque sed aut debitis.
    items:
      $ref: '#/definitions/Author'
    title: 'Mediatype identifier: application/vnd.author+json; type=collection; view=default'
    type: array
  Authorship:
    description: An Author authorship (default view)
    example:
      author:
        author_id: 1
        author_name: 8rt
        href: Autem est eaque itaque sed aut debitis.
      author_id: 1
      authorship_id: 1
      book:
        book_id: 1
        book_isbn: 8y
        book_name: gerdmc
        href: Quia recusandae.
        series:
          category:
            category_id: 1
            category_name: j6033t41m5
            href: Inventore error.
          category_id: 1
          href: Eligendi omnis voluptas.
          series_id: 1
          series_name: psp0
        series_id: 1
      book_id: 1
      href: Incidunt tempore quisquam corporis ut.
      role:
        href: Dicta molestias doloribus exercitationem molestiae sed.
        role_id: 1
        role_name: ol5djbut
      role_id: 1
    properties:
      author:
        $ref: '#/definitions/Author'
      author_id:
        description: Unique Author ID
        example: 1
        minimum: 1
        type: integer
      authorship_id:
        description: Unique Authorship ID
        example: 1
        minimum: 1
        type: integer
      book:
        $ref: '#/definitions/Book'
      book_id:
        description: Unique Book ID
        example: 1
        minimum: 1
        type: integer
      href:
        description: API href for making requests
        example: Incidunt tempore quisquam corporis ut.
        type: string
      role:
        $ref: '#/definitions/Role'
      role_id:
        description: Unique Role ID
        example: 1
        minimum: 1
        type: integer
    required:
    - authorship_id
    - author_id
    - book_id
    - role_id
    - href
    title: 'Mediatype identifier: application/vnd.authorship+json; view=default'
    type: object
  AuthorshipCollection:
    description: AuthorshipCollection is the media type for an array of Authorship
      (default view)
    example:
    - author:
        author_id: 1
        author_name: 8rt
        href: Autem est eaque itaque sed aut debitis.
      author_id: 1
      authorship_id: 1
      book:
        book_id: 1
        book_isbn: 8y
        book_name: gerdmc
        href: Quia recusandae.
        series:
          category:
            category_id: 1
            category_name: j6033t41m5
            href: Inventore error.
          category_id: 1
          href: Eligendi omnis voluptas.
          series_id: 1
          series_name: psp0
        series_id: 1
      book_id: 1
      href: Incidunt tempore quisquam corporis ut.
      role:
        href: Dicta molestias doloribus exercitationem molestiae sed.
        role_id: 1
        role_name: ol5djbut
      role_id: 1
    items:
      $ref: '#/definitions/Authorship'
    title: 'Mediatype identifier: application/vnd.authorship+json; type=collection;
      view=default'
    type: array
  Authtoken:
    description: An auth token (default view)
    example:
      access_token: 2f
      refresh_token: 4jr
      user:
        email: me@foo.bar
        href: Deleniti exercitationem et.
        is_admin: true
        is_validated: false
        nickname: 8nmhzxxf
        user_id: 1
    properties:
      access_token:
        description: Access Token
        example: 2f
        minLength: 1
        type: string
      refresh_token:
        description: Refresh Token
        example: 4jr
        minLength: 1
        type: string
      user:
        $ref: '#/definitions/User'
    required:
    - user
    - refresh_token
    - access_token
    title: 'Mediatype identifier: application/vnd.authtoken+json; view=default'
    type: object
  Book:
    description: A Book (default view)
    example:
      book_id: 1
      book_isbn: 8y
      book_name: gerdmc
      href: Quia recusandae.
      series:
        category:
          category_id: 1
          category_name: j6033t41m5
          href: Inventore error.
        category_id: 1
        href: Eligendi omnis voluptas.
        series_id: 1
        series_name: psp0
      series_id: 1
    properties:
      book_id:
        description: Unique Book ID
        example: 1
        minimum: 1
        type: integer
      book_isbn:
        description: Book ISBN
        example: 8y
        maxLength: 128
        minLength: 1
        type: string
      book_name:
        description: Book Name
        example: gerdmc
        maxLength: 128
        minLength: 1
        type: string
      href:
        description: API href for making requests
        example: Quia recusandae.
        type: string
      series:
        $ref: '#/definitions/Series'
      series_id:
        description: Unique Series ID
        example: 1
        minimum: 1
        type: integer
    required:
    - book_id
    - book_isbn
    - book_name
    - href
    title: 'Mediatype identifier: application/vnd.book+json; view=default'
    type: object
  BookCollection:
    description: BookCollection is the media type for an array of Book (default view)
    example:
    - book_id: 1
      book_isbn: 8y
      book_name: gerdmc
      href: Quia recusandae.
      series:
        category:
          category_id: 1
          category_name: j6033t41m5
          href: Inventore error.
        category_id: 1
        href: Eligendi omnis voluptas.
        series_id: 1
        series_name: psp0
      series_id: 1
    - book_id: 1
      book_isbn: 8y
      book_name: gerdmc
      href: Quia recusandae.
      series:
        category:
          category_id: 1
          category_name: j6033t41m5
          href: Inventore error.
        category_id: 1
        href: Eligendi omnis voluptas.
        series_id: 1
        series_name: psp0
      series_id: 1
    items:
      $ref: '#/definitions/Book'
    title: 'Mediatype identifier: application/vnd.book+json; type=collection; view=default'
    type: array
  Category:
    description: A Category (default view)
    example:
      category_id: 1
      category_name: j6033t41m5
      href: Inventore error.
    properties:
      category_id:
        description: Unique Category ID
        example: 1
        minimum: 1
        type: integer
      category_name:
        description: Category Name (Shonen/Shojo/Seinen)
        example: j6033t41m5
        maxLength: 128
        minLength: 1
        type: string
      href:
        description: API href for making requests
        example: Inventore error.
        type: string
    required:
    - category_id
    - category_name
    - href
    title: 'Mediatype identifier: application/vnd.category+json; view=default'
    type: object
  CategoryCollection:
    description: CategoryCollection is the media type for an array of Category (default
      view)
    example:
    - category_id: 1
      category_name: j6033t41m5
      href: Inventore error.
    - category_id: 1
      category_name: j6033t41m5
      href: Inventore error.
    - category_id: 1
      category_name: j6033t41m5
      href: Inventore error.
    items:
      $ref: '#/definitions/Category'
    title: 'Mediatype identifier: application/vnd.category+json; type=collection;
      view=default'
    type: array
  Class:
    description: A Class (default view)
    example:
      class_id: 1
      class_name: 5x6o2
      href: Nostrum rerum adipisci.
    properties:
      class_id:
        description: Unique Class ID
        example: 1
        minimum: 1
        type: integer
      class_name:
        description: Class Name (Thriller/Romance/...)
        example: 5x6o2
        maxLength: 128
        minLength: 1
        type: string
      href:
        description: API href for making requests
        example: Nostrum rerum adipisci.
        type: string
    required:
    - class_id
    - class_name
    - href
    title: 'Mediatype identifier: application/vnd.class+json; view=default'
    type: object
  ClassCollection:
    description: ClassCollection is the media type for an array of Class (default
      view)
    example:
    - class_id: 1
      class_name: 5x6o2
      href: Nostrum rerum adipisci.
    items:
      $ref: '#/definitions/Class'
    title: 'Mediatype identifier: application/vnd.class+json; type=collection; view=default'
    type: array
  Classification:
    description: A series classification (default view)
    example:
      class:
        class_id: 1
        class_name: 5x6o2
        href: Nostrum rerum adipisci.
      href: Aut libero aut libero.
    properties:
      class:
        $ref: '#/definitions/Class'
      href:
        description: API href for making requests
        example: Aut libero aut libero.
        type: string
    required:
    - class
    - href
    title: 'Mediatype identifier: application/vnd.classification+json; view=default'
    type: object
  ClassificationCollection:
    description: ClassificationCollection is the media type for an array of Classification
      (default view)
    example:
    - class:
        class_id: 1
        class_name: 5x6o2
        href: Nostrum rerum adipisci.
      href: Aut libero aut libero.
    - class:
        class_id: 1
        class_name: 5x6o2
        href: Nostrum rerum adipisci.
      href: Aut libero aut libero.
    - class:
        class_id: 1
        class_name: 5x6o2
        href: Nostrum rerum adipisci.
      href: Aut libero aut libero.
    items:
      $ref: '#/definitions/Classification'
    title: 'Mediatype identifier: application/vnd.classification+json; type=collection;
      view=default'
    type: array
  Collection:
    description: A Collection (default view)
    example:
      collection_id: 1
      collection_name: m194r3n
      editor:
        editor_id: 1
        editor_name: x3py7was
        href: Animi ut atque.
      editor_id: 1
      href: Voluptatem eaque maxime voluptatum.
    properties:
      collection_id:
        description: Unique Collection ID
        example: 1
        minimum: 1
        type: integer
      collection_name:
        description: Collection Name (Découverte/Shonen)
        example: m194r3n
        maxLength: 128
        minLength: 1
        type: string
      editor:
        $ref: '#/definitions/Editor'
      editor_id:
        description: Unique Editor ID
        example: 1
        minimum: 1
        type: integer
      href:
        description: API href for making requests
        example: Voluptatem eaque maxime voluptatum.
        type: string
    required:
    - collection_id
    - collection_name
    - editor_id
    - href
    title: 'Mediatype identifier: application/vnd.collection+json; view=default'
    type: object
  CollectionCollection:
    description: CollectionCollection is the media type for an array of Collection
      (default view)
    example:
    - collection_id: 1
      collection_name: m194r3n
      editor:
        editor_id: 1
        editor_name: x3py7was
        href: Animi ut atque.
      editor_id: 1
      href: Voluptatem eaque maxime voluptatum.
    - collection_id: 1
      collection_name: m194r3n
      editor:
        editor_id: 1
        editor_name: x3py7was
        href: Animi ut atque.
      editor_id: 1
      href: Voluptatem eaque maxime voluptatum.
    items:
      $ref: '#/definitions/Collection'
    title: 'Mediatype identifier: application/vnd.collection+json; type=collection;
      view=default'
    type: array
  CreateAuthorsPayload:
    example:
      author_name: f
    properties:
      author_name:
        description: Author Name
        example: f
        maxLength: 128
        minLength: 1
        type: string
    required:
    - author_name
    title: CreateAuthorsPayload
    type: object
  CreateAuthorshipsPayload:
    example:
      author_id: 1
      book_id: 1
      role_id: 1
    properties:
      author_id:
        description: Unique Author ID
        example: 1
        minimum: 1
        type: integer
      book_id:
        description: Unique Book ID
        example: 1
        minimum: 1
        type: integer
      role_id:
        description: Unique Role ID
        example: 1
        minimum: 1
        type: integer
    required:
    - author_id
    - book_id
    - role_id
    title: CreateAuthorshipsPayload
    type: object
  CreateBooksPayload:
    example:
      book_isbn: 859xjhdbe
      book_name: kgwh0vj
      series_id: 1
    properties:
      book_isbn:
        description: Book ISBN
        example: 859xjhdbe
        maxLength: 128
        minLength: 1
        type: string
      book_name:
        description: Book Name
        example: kgwh0vj
        maxLength: 128
        minLength: 1
        type: string
      series_id:
        description: Unique Series ID
        example: 1
        minimum: 1
        type: integer
    required:
    - book_isbn
    - book_name
    - series_id
    title: CreateBooksPayload
    type: object
  CreateCategoriesPayload:
    example:
      category_name: g3pur1t3p
    properties:
      category_name:
        description: Category Name (Shonen/Shojo/Seinen)
        example: g3pur1t3p
        maxLength: 128
        minLength: 1
        type: string
    required:
    - category_name
    title: CreateCategoriesPayload
    type: object
  CreateClassesPayload:
    example:
      class_name: c
    properties:
      class_name:
        description: Class Name (Thriller/Romance/...)
        example: c
        maxLength: 128
        minLength: 1
        type: string
    required:
    - class_name
    title: CreateClassesPayload
    type: object
  CreateClassificationsPayload:
    example:
      class_id: 1
    properties:
      class_id:
        description: Unique Class ID
        example: 1
        minimum: 1
        type: integer
    required:
    - class_id
    title: CreateClassificationsPayload
    type: object
  CreateCollectionsPayload:
    example:
      collection_name: k74zn84ar
      editor_id: 1
    properties:
      collection_name:
        description: Collection Name (Découverte/Shonen)
        example: k74zn84ar
        maxLength: 128
        minLength: 1
        type: string
      editor_id:
        description: Unique Editor ID
        example: 1
        minimum: 1
        type: integer
    required:
    - collection_name
    - editor_id
    title: CreateCollectionsPayload
    type: object
  CreateEditionsPayload:
    example:
      book_id: 1
      collection_id: 1
      print_id: 1
    properties:
      book_id:
        description: Unique Book ID
        example: 1
        minimum: 1
        type: integer
      collection_id:
        description: Unique Collection ID
        example: 1
        minimum: 1
        type: integer
      print_id:
        description: Unique Print ID
        example: 1
        minimum: 1
        type: integer
    required:
    - book_id
    - collection_id
    - print_id
    title: CreateEditionsPayload
    type: object
  CreateEditorsPayload:
    example:
      editor_name: r
    properties:
      editor_name:
        description: Editor Name (Glénat/Delcourt)
        example: r
        maxLength: 128
        minLength: 1
        type: string
    required:
    - editor_name
    title: CreateEditorsPayload
    type: object
  CreateOwnershipsPayload:
    example:
      book_id: 1
    properties:
      book_id:
        description: Unique Book ID
        example: 1
        minimum: 1
        type: integer
    required:
    - book_id
    title: CreateOwnershipsPayload
    type: object
  CreatePrintsPayload:
    example:
      print_name: fsq
    properties:
      print_name:
        description: Print Name (Deluxe/Ultimate/Pocket)
        example: fsq
        maxLength: 128
        minLength: 1
        type: string
    required:
    - print_name
    title: CreatePrintsPayload
    type: object
  CreateRolesPayload:
    example:
      role_name: i7lxy5
    properties:
      role_name:
        description: Role Name (Author/Scenarist/Cartoonist)
        example: i7lxy5
        maxLength: 128
        minLength: 1
        type: string
    required:
    - role_name
    title: CreateRolesPayload
    type: object
  CreateSeriesPayload:
    example:
      category_id: 1
      series_name: pdq00qlg
    properties:
      category_id:
        description: Unique Category ID
        example: 1
        minimum: 1
        type: integer
      series_name:
        description: Series Name (Akira/Dragon ball)
        example: pdq00qlg
        maxLength: 128
        minLength: 1
        type: string
    required:
    - series_name
    - category_id
    title: CreateSeriesPayload
    type: object
  Edition:
    description: An edition (default view)
    example:
      book:
        book_id: 1
        book_isbn: 8y
        book_name: gerdmc
        href: Quia recusandae.
        series:
          category:
            category_id: 1
            category_name: j6033t41m5
            href: Inventore error.
          category_id: 1
          href: Eligendi omnis voluptas.
          series_id: 1
          series_name: psp0
        series_id: 1
      book_id: 1
      collection:
        collection_id: 1
        collection_name: m194r3n
        editor:
          editor_id: 1
          editor_name: x3py7was
          href: Animi ut atque.
        editor_id: 1
        href: Voluptatem eaque maxime voluptatum.
      collection_id: 1
      edition_id: 1
      href: Impedit vero corporis quas.
      print:
        href: Esse voluptatem laudantium vel.
        print_id: 1
        print_name: 94atz
      print_id: 1
    properties:
      book:
        $ref: '#/definitions/Book'
      book_id:
        description: Unique Book ID
        example: 1
        minimum: 1
        type: integer
      collection:
        $ref: '#/definitions/Collection'
      collection_id:
        description: Unique Collection ID
        example: 1
        minimum: 1
        type: integer
      edition_id:
        description: Unique Edition ID
        example: 1
        minimum: 1
        type: integer
      href:
        description: API href for making requests
        example: Impedit vero corporis quas.
        type: string
      print:
        $ref: '#/definitions/Print'
      print_id:
        description: Unique Print ID
        example: 1
        minimum: 1
        type: integer
    required:
    - edition_id
    - book_id
    - collection_id
    - print_id
    - href
    title: 'Mediatype identifier: application/vnd.edition+json; view=default'
    type: object
  EditionCollection:
    description: EditionCollection is the media type for an array of Edition (default
      view)
    example:
    - book:
        book_id: 1
        book_isbn: 8y
        book_name: gerdmc
        href: Quia recusandae.
        series:
          category:
            category_id: 1
            category_name: j6033t41m5
            href: Inventore error.
          category_id: 1
          href: Eligendi omnis voluptas.
          series_id: 1
          series_name: psp0
        series_id: 1
      book_id: 1
      collection:
        collection_id: 1
        collection_name: m194r3n
        editor:
          editor_id: 1
          editor_name: x3py7was
          href: Animi ut atque.
        editor_id: 1
        href: Voluptatem eaque maxime voluptatum.
      collection_id: 1
      edition_id: 1
      href: Impedit vero corporis quas.
      print:
        href: Esse voluptatem laudantium vel.
        print_id: 1
        print_name: 94atz
      print_id: 1
    items:
      $ref: '#/definitions/Edition'
    title: 'Mediatype identifier: application/vnd.edition+json; type=collection; view=default'
    type: array
  Editor:
    description: An Editor (default view)
    example:
      editor_id: 1
      editor_name: x3py7was
      href: Animi ut atque.
    properties:
      editor_id:
        description: Unique Editor ID
        example: 1
        minimum: 1
        type: integer
      editor_name:
        description: Editor Name (Glénat/Delcourt)
        example: x3py7was
        maxLength: 128
        minLength: 1
        type: string
      href:
        description: API href for making requests
        example: Animi ut atque.
        type: string
    required:
    - editor_id
    - editor_name
    - href
    title: 'Mediatype identifier: application/vnd.editor+json; view=default'
    type: object
  EditorCollection:
    description: EditorCollection is the media type for an array of Editor (default
      view)
    example:
    - editor_id: 1
      editor_name: x3py7was
      href: Animi ut atque.
    - editor_id: 1
      editor_name: x3py7was
      href: Animi ut atque.
    - editor_id: 1
      editor_name: x3py7was
      href: Animi ut atque.
    items:
      $ref: '#/definitions/Editor'
    title: 'Mediatype identifier: application/vnd.editor+json; type=collection; view=default'
    type: array
  Ownership:
    description: A User ownership (default view)
    example:
      book:
        book_id: 1
        book_isbn: 8y
        book_name: gerdmc
        href: Quia recusandae.
        series:
          category:
            category_id: 1
            category_name: j6033t41m5
            href: Inventore error.
          category_id: 1
          href: Eligendi omnis voluptas.
          series_id: 1
          series_name: psp0
        series_id: 1
      book_id: 1
      href: In omnis reiciendis maxime quia dolorem nobis.
      user_id: 1
    properties:
      book:
        $ref: '#/definitions/Book'
      book_id:
        description: Unique Book ID
        example: 1
        minimum: 1
        type: integer
      href:
        description: API href for making requests
        example: In omnis reiciendis maxime quia dolorem nobis.
        type: string
      user_id:
        description: Unique User ID
        example: 1
        minimum: 1
        type: integer
    required:
    - user_id
    - book_id
    - href
    title: 'Mediatype identifier: application/vnd.ownership+json; view=default'
    type: object
  OwnershipCollection:
    description: OwnershipCollection is the media type for an array of Ownership (default
      view)
    example:
    - book:
        book_id: 1
        book_isbn: 8y
        book_name: gerdmc
        href: Quia recusandae.
        series:
          category:
            category_id: 1
            category_name: j6033t41m5
            href: Inventore error.
          category_id: 1
          href: Eligendi omnis voluptas.
          series_id: 1
          series_name: psp0
        series_id: 1
      book_id: 1
      href: In omnis reiciendis maxime quia dolorem nobis.
      user_id: 1
    - book:
        book_id: 1
        book_isbn: 8y
        book_name: gerdmc
        href: Quia recusandae.
        series:
          category:
            category_id: 1
            category_name: j6033t41m5
            href: Inventore error.
          category_id: 1
          href: Eligendi omnis voluptas.
          series_id: 1
          series_name: psp0
        series_id: 1
      book_id: 1
      href: In omnis reiciendis maxime quia dolorem nobis.
      user_id: 1
    - book:
        book_id: 1
        book_isbn: 8y
        book_name: gerdmc
        href: Quia recusandae.
        series:
          category:
            category_id: 1
            category_name: j6033t41m5
            href: Inventore error.
          category_id: 1
          href: Eligendi omnis voluptas.
          series_id: 1
          series_name: psp0
        series_id: 1
      book_id: 1
      href: In omnis reiciendis maxime quia dolorem nobis.
      user_id: 1
    items:
      $ref: '#/definitions/Ownership'
    title: 'Mediatype identifier: application/vnd.ownership+json; type=collection;
      view=default'
    type: array
  PasswordChangePayload:
    example:
      password: kjwr4nt
      token: mp
    properties:
      password:
        description: user password
        example: kjwr4nt
        maxLength: 32
        minLength: 1
        type: string
      token:
        description: token
        example: mp
        minLength: 1
        type: string
    required:
    - password
    - token
    title: PasswordChangePayload
    type: object
  Print:
    description: A Print (default view)
    example:
      href: Esse voluptatem laudantium vel.
      print_id: 1
      print_name: 94atz
    properties:
      href:
        description: API href for making requests
        example: Esse voluptatem laudantium vel.
        type: string
      print_id:
        description: Unique Print ID
        example: 1
        minimum: 1
        type: integer
      print_name:
        description: Print Name (Deluxe/Ultimate/Pocket)
        example: 94atz
        maxLength: 128
        minLength: 1
        type: string
    required:
    - print_id
    - print_name
    - href
    title: 'Mediatype identifier: application/vnd.print+json; view=default'
    type: object
  PrintCollection:
    description: PrintCollection is the media type for an array of Print (default
      view)
    example:
    - href: Esse voluptatem laudantium vel.
      print_id: 1
      print_name: 94atz
    - href: Esse voluptatem laudantium vel.
      print_id: 1
      print_name: 94atz
    items:
      $ref: '#/definitions/Print'
    title: 'Mediatype identifier: application/vnd.print+json; type=collection; view=default'
    type: array
  Role:
    description: A Role (default view)
    example:
      href: Dicta molestias doloribus exercitationem molestiae sed.
      role_id: 1
      role_name: ol5djbut
    properties:
      href:
        description: API href for making requests
        example: Dicta molestias doloribus exercitationem molestiae sed.
        type: string
      role_id:
        description: Unique Role ID
        example: 1
        minimum: 1
        type: integer
      role_name:
        description: Role Name (Author/Scenarist/Cartoonist)
        example: ol5djbut
        maxLength: 128
        minLength: 1
        type: string
    required:
    - role_id
    - role_name
    - href
    title: 'Mediatype identifier: application/vnd.role+json; view=default'
    type: object
  RoleCollection:
    description: RoleCollection is the media type for an array of Role (default view)
    example:
    - href: Dicta molestias doloribus exercitationem molestiae sed.
      role_id: 1
      role_name: ol5djbut
    - href: Dicta molestias doloribus exercitationem molestiae sed.
      role_id: 1
      role_name: ol5djbut
    items:
      $ref: '#/definitions/Role'
    title: 'Mediatype identifier: application/vnd.role+json; type=collection; view=default'
    type: array
  Series:
    description: A Serie (default view)
    example:
      category:
        category_id: 1
        category_name: j6033t41m5
        href: Inventore error.
      category_id: 1
      href: Eligendi omnis voluptas.
      series_id: 1
      series_name: psp0
    properties:
      category:
        $ref: '#/definitions/Category'
      category_id:
        description: Unique Category ID
        example: 1
        minimum: 1
        type: integer
      href:
        description: API href for making requests
        example: Eligendi omnis voluptas.
        type: string
      series_id:
        description: Unique Series ID
        example: 1
        minimum: 1
        type: integer
      series_name:
        description: Series Name (Akira/Dragon ball)
        example: psp0
        maxLength: 128
        minLength: 1
        type: string
    required:
    - series_id
    - category_id
    - series_name
    - href
    title: 'Mediatype identifier: application/vnd.series+json; view=default'
    type: object
  SeriesCollection:
    description: SeriesCollection is the media type for an array of Series (default
      view)
    example:
    - category:
        category_id: 1
        category_name: j6033t41m5
        href: Inventore error.
      category_id: 1
      href: Eligendi omnis voluptas.
      series_id: 1
      series_name: psp0
    - category:
        category_id: 1
        category_name: j6033t41m5
        href: Inventore error.
      category_id: 1
      href: Eligendi omnis voluptas.
      series_id: 1
      series_name: psp0
    - category:
        category_id: 1
        category_name: j6033t41m5
        href: Inventore error.
      category_id: 1
      href: Eligendi omnis voluptas.
      series_id: 1
      series_name: psp0
    items:
      $ref: '#/definitions/Series'
    title: 'Mediatype identifier: application/vnd.series+json; type=collection; view=default'
    type: array
  Token:
    description: A token (default view)
    example:
      token: giw
    properties:
      token:
        description: token
        example: giw
        minLength: 1
        type: string
    required:
    - token
    title: 'Mediatype identifier: application/vnd.token+json; view=default'
    type: object
  UpdateAuthorsPayload:
    example:
      author_name: 9wnw
    properties:
      author_name:
        description: Author Name
        example: 9wnw
        maxLength: 128
        minLength: 1
        type: string
    required:
    - author_name
    title: UpdateAuthorsPayload
    type: object
  UpdateBooksPayload:
    example:
      book_name: n1l
      series_id: 1
    properties:
      book_name:
        description: Book Name
        example: n1l
        maxLength: 128
        minLength: 1
        type: string
      series_id:
        description: Unique Series ID
        example: 1
        minimum: 1
        type: integer
    title: UpdateBooksPayload
    type: object
  UpdateCategoriesPayload:
    example:
      category_name: flyhi166
    properties:
      category_name:
        description: Category Name (Shonen/Shojo/Seinen)
        example: flyhi166
        maxLength: 128
        minLength: 1
        type: string
    required:
    - category_name
    title: UpdateCategoriesPayload
    type: object
  UpdateClassesPayload:
    example:
      class_name: y2n0j55q
    properties:
      class_name:
        description: Class Name (Thriller/Romance/...)
        example: y2n0j55q
        maxLength: 128
        minLength: 1
        type: string
    required:
    - class_name
    title: UpdateClassesPayload
    type: object
  UpdateCollectionsPayload:
    example:
      collection_name: 37e1a9vh
      editor_id: 1
    properties:
      collection_name:
        description: Collection Name (Découverte/Shonen)
        example: 37e1a9vh
        maxLength: 128
        minLength: 1
        type: string
      editor_id:
        description: Unique Editor ID
        example: 1
        minimum: 1
        type: integer
    title: UpdateCollectionsPayload
    type: object
  UpdateEditorsPayload:
    example:
      editor_name: oxt6vy
    properties:
      editor_name:
        description: Editor Name (Glénat/Delcourt)
        example: oxt6vy
        maxLength: 128
        minLength: 1
        type: string
    required:
    - editor_name
    title: UpdateEditorsPayload
    type: object
  UpdatePrintsPayload:
    example:
      print_name: xbvma0ty4p
    properties:
      print_name:
        description: Print Name (Deluxe/Ultimate/Pocket)
        example: xbvma0ty4p
        maxLength: 128
        minLength: 1
        type: string
    required:
    - print_name
    title: UpdatePrintsPayload
    type: object
  UpdateRolesPayload:
    example:
      role_name: ho2v7wul
    properties:
      role_name:
        description: Role Name (Author/Scenarist/Cartoonist)
        example: ho2v7wul
        maxLength: 128
        minLength: 1
        type: string
    required:
    - role_name
    title: UpdateRolesPayload
    type: object
  UpdateSeriesPayload:
    example:
      category_id: 1
      series_name: "2"
    properties:
      category_id:
        description: Unique Category ID
        example: 1
        minimum: 1
        type: integer
      series_name:
        description: Series Name (Akira/Dragon ball)
        example: "2"
        maxLength: 128
        minLength: 1
        type: string
    title: UpdateSeriesPayload
    type: object
  UpdateUsersPayload:
    example:
      nickname: b05ip23
    properties:
      nickname:
        description: user nickname
        example: b05ip23
        maxLength: 32
        minLength: 1
        type: string
    required:
    - nickname
    title: UpdateUsersPayload
    type: object
  User:
    description: A User (default view)
    example:
      email: me@foo.bar
      href: Deleniti exercitationem et.
      is_admin: true
      is_validated: false
      nickname: 8nmhzxxf
      user_id: 1
    properties:
      email:
        description: user email
        example: me@foo.bar
        format: email
        type: string
      href:
        description: API href for making requests
        example: Deleniti exercitationem et.
        type: string
      is_admin:
        example: true
        type: boolean
      is_validated:
        example: false
        type: boolean
      nickname:
        description: user nickname
        example: 8nmhzxxf
        maxLength: 32
        minLength: 1
        type: string
      user_id:
        description: Unique User ID
        example: 1
        minimum: 1
        type: integer
    required:
    - user_id
    - email
    - nickname
    - is_admin
    - is_validated
    - href
    title: 'Mediatype identifier: application/vnd.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - email: me@foo.bar
      href: Deleniti exercitationem et.
      is_admin: true
      is_validated: false
      nickname: 8nmhzxxf
      user_id: 1
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.user+json; type=collection; view=default'
    type: array
  UserCreatePayload:
    example:
      email: me@foo.bar
      nickname: 0j8927
      password: vesdkxat
    properties:
      email:
        description: user email
        example: me@foo.bar
        format: email
        type: string
      nickname:
        description: user nickname
        example: 0j8927
        maxLength: 32
        minLength: 1
        type: string
      password:
        description: user password
        example: vesdkxat
        maxLength: 32
        minLength: 1
        type: string
    required:
    - email
    - nickname
    - password
    title: UserCreatePayload
    type: object
  ValidateValidationPayload:
    example:
      token: 53r
    properties:
      token:
        description: token
        example: 53r
        minLength: 1
        type: string
    required:
    - token
    title: ValidateValidationPayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609066e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609066e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
externalDocs:
  description: api docs
  url: ""
host: localhost:8089
info:
  contact:
    email: nbr41@foo.bar
    name: NBR41
    url: http://my-inventory.design
  description: An API to manage my-inventory
  license:
    name: MIT
  title: The virtual my-inventory
  version: ""
paths:
  /_ah/health:
    get:
      description: Perform health check.
      operationId: health#health
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      schemes:
      - http
      summary: health health
      tags:
      - health
  /authenticate:
    post:
      description: auth the user
      operationId: authenticate#auth
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AuthenticatePayload'
      produces:
      - application/vnd.authtoken+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Authtoken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: auth authenticate
      tags:
      - authenticate
  /authors:
    get:
      description: List authors
      operationId: authors#list
      produces:
      - application/vnd.author+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthorCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list authors
      tags:
      - authors
    post:
      description: Create new author
      operationId: authors#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateAuthorsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /authors/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create authors
      tags:
      - authors
  /authors/{author_id}:
    delete:
      description: delete author by id
      operationId: authors#delete
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete authors
      tags:
      - authors
    get:
      description: Get author by id
      operationId: authors#show
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      produces:
      - application/vnd.author+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show authors
      tags:
      - authors
    put:
      description: Update author by id
      operationId: authors#update
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateAuthorsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update authors
      tags:
      - authors
  /authors/{author_id}/categories:
    get:
      description: List categories by author
      operationId: relationAuthor#listCategories
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      produces:
      - application/vnd.category+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategoryCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCategories relationAuthor
      tags:
      - relationAuthor
  /authors/{author_id}/categories/{category_id}/series:
    get:
      description: List series by author and category
      operationId: relationAuthor#listSeriesByCategory
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByCategory relationAuthor
      tags:
      - relationAuthor
  /authors/{author_id}/classes:
    get:
      description: List classes by author
      operationId: relationAuthor#listClasses
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      produces:
      - application/vnd.class+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ClassCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listClasses relationAuthor
      tags:
      - relationAuthor
  /authors/{author_id}/classes/{class_id}/series:
    get:
      description: List series by author and class
      operationId: relationAuthor#listSeriesByClass
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByClass relationAuthor
      tags:
      - relationAuthor
  /authors/{author_id}/roles:
    get:
      description: List roles by author
      operationId: relationAuthor#listRoles
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      produces:
      - application/vnd.role+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RoleCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listRoles relationAuthor
      tags:
      - relationAuthor
  /authors/{author_id}/roles/{role_id}/series:
    get:
      description: List series by author and role
      operationId: relationAuthor#listSeriesByRole
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      - description: Unique Role ID
        in: path
        minimum: 1
        name: role_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByRole relationAuthor
      tags:
      - relationAuthor
  /authors/{author_id}/series:
    get:
      description: List series by author
      operationId: relationAuthor#listSeries
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationAuthor
      tags:
      - relationAuthor
  /authorships:
    get:
      description: List authorships
      operationId: authorships#list
      produces:
      - application/vnd.authorship+json; type=collection
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthorshipCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: list authorships
      tags:
      - authorships
    post:
      description: Create new authorship
      operationId: authorships#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateAuthorshipsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /authorships/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create authorships
      tags:
      - authorships
  /authorships/{authorship_id}:
    delete:
      description: delete authorships by ids
      operationId: authorships#delete
      parameters:
      - description: Unique Authorship ID
        in: path
        minimum: 1
        name: authorship_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete authorships
      tags:
      - authorships
    get:
      description: Get authorships by ids
      operationId: authorships#show
      parameters:
      - description: Unique Authorship ID
        in: path
        minimum: 1
        name: authorship_id
        required: true
        type: integer
      produces:
      - application/vnd.authorship+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Authorship'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: show authorships
      tags:
      - authorships
  /books:
    get:
      description: List books
      operationId: books#list
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list books
      tags:
      - books
    post:
      description: Create new book
      operationId: books#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateBooksPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /books/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create books
      tags:
      - books
  /books/{book_id}:
    delete:
      description: delete book by id
      operationId: books#delete
      parameters:
      - description: Unique Book ID
        in: path
        minimum: 1
        name: book_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete books
      tags:
      - books
    get:
      description: Get book by id
      operationId: books#show
      parameters:
      - description: Unique Book ID
        in: path
        minimum: 1
        name: book_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show books
      tags:
      - books
    put:
      description: Update book by id
      operationId: books#update
      parameters:
      - description: Unique Book ID
        in: path
        minimum: 1
        name: book_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateBooksPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update books
      tags:
      - books
  /categories:
    get:
      description: List categories
      operationId: categories#list
      produces:
      - application/vnd.category+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategoryCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list categories
      tags:
      - categories
    post:
      description: Create new category
      operationId: categories#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateCategoriesPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /categories/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create categories
      tags:
      - categories
  /categories/{category_id}:
    delete:
      description: delete category by id
      operationId: categories#delete
      parameters:
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete categories
      tags:
      - categories
    get:
      description: Get category by id
      operationId: categories#show
      parameters:
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      produces:
      - application/vnd.category+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show categories
      tags:
      - categories
    put:
      description: Update category by id
      operationId: categories#update
      parameters:
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateCategoriesPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update categories
      tags:
      - categories
  /categories/{category_id}/authors:
    get:
      description: List authors by category
      operationId: relationCategory#listAuthors
      parameters:
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      produces:
      - application/vnd.author+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthorCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listAuthors relationCategory
      tags:
      - relationCategory
  /categories/{category_id}/classes:
    get:
      description: List classes by category
      operationId: relationCategory#listClasses
      parameters:
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      produces:
      - application/vnd.class+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ClassCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listClasses relationCategory
      tags:
      - relationCategory
  /categories/{category_id}/classes/{class_id}/series:
    get:
      description: List series by category and class
      operationId: relationCategory#listSeriesByClass
      parameters:
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByClass relationCategory
      tags:
      - relationCategory
  /categories/{category_id}/series:
    get:
      description: List series by category
      operationId: relationCategory#listSeries
      parameters:
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationCategory
      tags:
      - relationCategory
  /classes:
    get:
      description: List classes
      operationId: classes#list
      produces:
      - application/vnd.class+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ClassCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list classes
      tags:
      - classes
    post:
      description: Create new class
      operationId: classes#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateClassesPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /classes/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create classes
      tags:
      - classes
  /classes/{class_id}:
    delete:
      description: delete class by id
      operationId: classes#delete
      parameters:
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete classes
      tags:
      - classes
    get:
      description: Get class by id
      operationId: classes#show
      parameters:
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      produces:
      - application/vnd.class+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Class'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show classes
      tags:
      - classes
    put:
      description: Update class by id
      operationId: classes#update
      parameters:
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateClassesPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update classes
      tags:
      - classes
  /classes/{class_id}/categories:
    get:
      description: List categories by class
      operationId: relationClass#listCategories
      parameters:
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      produces:
      - application/vnd.category+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategoryCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCategories relationClass
      tags:
      - relationClass
  /classes/{class_id}/categories/{category_id}/series:
    get:
      description: List series by class and category
      operationId: relationClass#listSeriesByCategory
      parameters:
      - description: Unique Category ID
        in: path
        minimum: 1
        name: category_id
        required: true
        type: integer
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByCategory relationClass
      tags:
      - relationClass
  /classes/{class_id}/series:
    get:
      description: List series by class
      operationId: relationClass#listSeries
      parameters:
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationClass
      tags:
      - relationClass
  /collections:
    get:
      description: List collections
      operationId: collections#list
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list collections
      tags:
      - collections
    post:
      description: Create new collection
      operationId: collections#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateCollectionsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /collections/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create collections
      tags:
      - collections
  /collections/{collection_id}:
    delete:
      description: delete collection by id
      operationId: collections#delete
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete collections
      tags:
      - collections
    get:
      description: Get collection by id
      operationId: collections#show
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Collection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show collections
      tags:
      - collections
    put:
      description: Update collection by id
      operationId: collections#update
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateCollectionsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update collections
      tags:
      - collections
  /collections/{collection_id}/books:
    get:
      description: List books by collection
      operationId: relationCollection#listBooks
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationCollection
      tags:
      - relationCollection
  /collections/{collection_id}/prints:
    get:
      description: List prints by collection
      operationId: relationCollection#listPrints
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrints relationCollection
      tags:
      - relationCollection
  /collections/{collection_id}/prints/{print_id}/books:
    get:
      description: List books by collection and print
      operationId: relationCollection#listBooksByPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrint relationCollection
      tags:
      - relationCollection
  /collections/{collection_id}/prints/{print_id}/series:
    get:
      description: List series by collection and print
      operationId: relationCollection#listSeriesByPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByPrint relationCollection
      tags:
      - relationCollection
  /collections/{collection_id}/prints/{print_id}/series/{series_id}/books:
    get:
      description: List books by collection, prints and series
      operationId: relationCollection#listBooksByPrintSeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrintSeries relationCollection
      tags:
      - relationCollection
  /collections/{collection_id}/series:
    get:
      description: List series by collection
      operationId: relationCollection#listSeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationCollection
      tags:
      - relationCollection
  /collections/{collection_id}/series/{series_id}/books:
    get:
      description: List books by collection and series
      operationId: relationCollection#listBooksBySeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeries relationCollection
      tags:
      - relationCollection
  /collections/{collection_id}/series/{series_id}/prints:
    get:
      description: List prints by collection and series
      operationId: relationCollection#listPrintsBySeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrintsBySeries relationCollection
      tags:
      - relationCollection
  /collections/{collection_id}/series/{series_id}/prints/{print_id}/books:
    get:
      description: List books by collection, series and print
      operationId: relationCollection#listBooksBySeriesPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeriesPrint relationCollection
      tags:
      - relationCollection
  /editions:
    get:
      description: List editions
      operationId: editions#list
      produces:
      - application/vnd.edition+json; type=collection
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EditionCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: list editions
      tags:
      - editions
    post:
      description: Create new edition
      operationId: editions#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateEditionsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /editions/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create editions
      tags:
      - editions
  /editions/{edition_id}:
    delete:
      description: delete book edition by id
      operationId: editions#delete
      parameters:
      - description: Unique Edition ID
        in: path
        minimum: 1
        name: edition_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete editions
      tags:
      - editions
    get:
      description: Get book edition by id
      operationId: editions#show
      parameters:
      - description: Unique Edition ID
        in: path
        minimum: 1
        name: edition_id
        required: true
        type: integer
      produces:
      - application/vnd.edition+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Edition'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: show editions
      tags:
      - editions
  /editors:
    get:
      description: List editors
      operationId: editors#list
      produces:
      - application/vnd.editor+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EditorCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list editors
      tags:
      - editors
    post:
      description: Create new editor
      operationId: editors#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateEditorsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /editors/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create editors
      tags:
      - editors
  /editors/{editor_id}:
    delete:
      description: delete editor by id
      operationId: editors#delete
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete editors
      tags:
      - editors
    get:
      description: Get editor by id
      operationId: editors#show
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.editor+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Editor'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show editors
      tags:
      - editors
    put:
      description: Update editor by id
      operationId: editors#update
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateEditorsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update editors
      tags:
      - editors
  /editors/{editor_id}/books:
    get:
      description: List books by editor
      operationId: relationEditors#listBooks
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationEditors
      tags:
      - relationEditors
  /editors/{editor_id}/collections:
    get:
      description: List collections by editor
      operationId: relationEditors#listCollections
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationEditors
      tags:
      - relationEditors
  /editors/{editor_id}/collections/{collection_id}/books:
    get:
      description: List books by editor-collection
      operationId: relationEditorsCollections#listBooks
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/collections/{collection_id}/prints:
    get:
      description: List prints by editor-collection
      operationId: relationEditorsCollections#listPrints
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrints relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/collections/{collection_id}/prints/{print_id}/books:
    get:
      description: List books by editor-collection-print
      operationId: relationEditorsCollections#listBooksByPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrint relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/collections/{collection_id}/prints/{print_id}/series:
    get:
      description: List series by editor-collection-print
      operationId: relationEditorsCollections#listSeriesByPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByPrint relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/collections/{collection_id}/prints/{print_id}/series/{series_id}/books:
    get:
      description: List books by editor-collection-print-series
      operationId: relationEditorsCollections#listBooksByPrintSeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrintSeries relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/collections/{collection_id}/series:
    get:
      description: List series by editor-collection
      operationId: relationEditorsCollections#listSeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/collections/{collection_id}/series/{series_id}/books:
    get:
      description: List books by editor-collection-series
      operationId: relationEditorsCollections#listBooksBySeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeries relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/collections/{collection_id}/series/{series_id}/prints:
    get:
      description: List prints by editor-collection-series
      operationId: relationEditorsCollections#listPrintsBySeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrintsBySeries relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/collections/{collection_id}/series/{series_id}/prints/{print_id}/books:
    get:
      description: List books by editor-collection-series-print
      operationId: relationEditorsCollections#listBooksBySeriesPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeriesPrint relationEditorsCollections
      tags:
      - relationEditorsCollections
  /editors/{editor_id}/prints:
    get:
      description: List prints by editor
      operationId: relationEditors#listPrints
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrints relationEditors
      tags:
      - relationEditors
  /editors/{editor_id}/prints/{print_id}/books:
    get:
      description: List books by editor-print
      operationId: relationEditorsPrints#listBooks
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/prints/{print_id}/collections:
    get:
      description: List collections by editor-print
      operationId: relationEditorsPrints#listCollections
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/prints/{print_id}/collections/{collection_id}/books:
    get:
      description: List books by editor-print-collection
      operationId: relationEditorsPrints#listBooksByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollection relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/prints/{print_id}/collections/{collection_id}/series:
    get:
      description: List series by editor-print-collection
      operationId: relationEditorsPrints#listSeriesByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByCollection relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/prints/{print_id}/collections/{collection_id}/series/{series_id}/books:
    get:
      description: List books by editor-print-collection-series
      operationId: relationEditorsPrints#listBooksByCollectionSeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollectionSeries relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/prints/{print_id}/series:
    get:
      description: List series by editor-print
      operationId: relationEditorsPrints#listSeries
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/prints/{print_id}/series/{series_id}/books:
    get:
      description: List books by editor-print-series
      operationId: relationEditorsPrints#listBooksBySeries
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeries relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/prints/{print_id}/series/{series_id}/collections:
    get:
      description: List collections by editor-print-series
      operationId: relationEditorsPrints#listCollectionsBySeries
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollectionsBySeries relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/prints/{print_id}/series/{series_id}/collections/{collection_id}/books:
    get:
      description: List books by editor-print-series-collection
      operationId: relationEditorsPrints#listBooksBySeriesCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeriesCollection relationEditorsPrints
      tags:
      - relationEditorsPrints
  /editors/{editor_id}/series:
    get:
      description: List series by editor
      operationId: relationEditors#listSeries
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationEditors
      tags:
      - relationEditors
  /editors/{editor_id}/series/{series_id}/books:
    get:
      description: List books by editor-series
      operationId: relationEditorsSeries#listBooks
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationEditorsSeries
      tags:
      - relationEditorsSeries
  /editors/{editor_id}/series/{series_id}/collections:
    get:
      description: List collections by editor-series
      operationId: relationEditorsSeries#listCollections
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationEditorsSeries
      tags:
      - relationEditorsSeries
  /editors/{editor_id}/series/{series_id}/collections/{collection_id}/books:
    get:
      description: List books by editor-series-collection
      operationId: relationEditorsSeries#listBooksByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollection relationEditorsSeries
      tags:
      - relationEditorsSeries
  /editors/{editor_id}/series/{series_id}/collections/{collection_id}/prints:
    get:
      description: List prints by editor-series-collection
      operationId: relationEditorsSeries#listPrintsByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrintsByCollection relationEditorsSeries
      tags:
      - relationEditorsSeries
  /editors/{editor_id}/series/{series_id}/collections/{collection_id}/prints/{print_id}/books:
    get:
      description: List books by editor-series-collection-print
      operationId: relationEditorsSeries#listBooksByCollectionPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollectionPrint relationEditorsSeries
      tags:
      - relationEditorsSeries
  /editors/{editor_id}/series/{series_id}/prints:
    get:
      description: List prints by editor-series
      operationId: relationEditorsSeries#listPrints
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrints relationEditorsSeries
      tags:
      - relationEditorsSeries
  /editors/{editor_id}/series/{series_id}/prints/{print_id}/books:
    get:
      description: List books by editor-series-print
      operationId: relationEditorsSeries#listBooksByPrint
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrint relationEditorsSeries
      tags:
      - relationEditorsSeries
  /editors/{editor_id}/series/{series_id}/prints/{print_id}/collections:
    get:
      description: List collections by editor-series-print
      operationId: relationEditorsSeries#listCollectionsByPrint
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollectionsByPrint relationEditorsSeries
      tags:
      - relationEditorsSeries
  /editors/{editor_id}/series/{series_id}/prints/{print_id}/collections/{collection_id}/books:
    get:
      description: List books by editor-series-print-collection
      operationId: relationEditorsSeries#listBooksByPrintCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrintCollection relationEditorsSeries
      tags:
      - relationEditorsSeries
  /password:
    get:
      description: Get password reset
      operationId: password#get
      parameters:
      - description: user email
        format: email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: get password
      tags:
      - password
    post:
      description: Update user password
      operationId: password#update
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/PasswordChangePayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: update password
      tags:
      - password
  /prints:
    get:
      description: List prints
      operationId: prints#list
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list prints
      tags:
      - prints
    post:
      description: Create new print edition
      operationId: prints#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreatePrintsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /prints/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create prints
      tags:
      - prints
  /prints/{print_id}:
    delete:
      description: delete print by id
      operationId: prints#delete
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete prints
      tags:
      - prints
    get:
      description: Get print by id
      operationId: prints#show
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.print+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Print'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show prints
      tags:
      - prints
    put:
      description: Update print by id
      operationId: prints#update
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdatePrintsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update prints
      tags:
      - prints
  /prints/{print_id}/books:
    get:
      description: List books by print
      operationId: relationPrints#listBooks
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationPrints
      tags:
      - relationPrints
  /prints/{print_id}/collections:
    get:
      description: List collections by print
      operationId: relationPrints#listCollections
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationPrints
      tags:
      - relationPrints
  /prints/{print_id}/collections/{collection_id}/books:
    get:
      description: List books by print-collection
      operationId: relationPrintsCollections#listBooks
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationPrintsCollections
      tags:
      - relationPrintsCollections
  /prints/{print_id}/collections/{collection_id}/series:
    get:
      description: List series by print-collection
      operationId: relationPrintsCollections#listSeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationPrintsCollections
      tags:
      - relationPrintsCollections
  /prints/{print_id}/collections/{collection_id}/series/{series_id}/books:
    get:
      description: List books by print-collection-series
      operationId: relationPrintsCollections#listBooksBySeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeries relationPrintsCollections
      tags:
      - relationPrintsCollections
  /prints/{print_id}/editors:
    get:
      description: List editors by print
      operationId: relationPrints#listEditors
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.editor+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EditorCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listEditors relationPrints
      tags:
      - relationPrints
  /prints/{print_id}/editors/{editor_id}/books:
    get:
      description: List books by print-editor
      operationId: relationPrintsEditors#listBooks
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/editors/{editor_id}/collections:
    get:
      description: List collections by print-editor
      operationId: relationPrintsEditors#listCollections
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/editors/{editor_id}/collections/{collection_id}/books:
    get:
      description: List books by print-editor-collection
      operationId: relationPrintsEditors#listBooksByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollection relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/editors/{editor_id}/collections/{collection_id}/series:
    get:
      description: List series by print-editor-collection
      operationId: relationPrintsEditors#listSeriesByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByCollection relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/editors/{editor_id}/collections/{collection_id}/series/{series_id}/books:
    get:
      description: List books by print-editor-collection-series
      operationId: relationPrintsEditors#listBooksByCollectionSeries
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollectionSeries relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/editors/{editor_id}/series:
    get:
      description: List series by print-editor
      operationId: relationPrintsEditors#listSeries
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/editors/{editor_id}/series/{series_id}/books:
    get:
      description: List books by print-editor-series
      operationId: relationPrintsEditors#listBooksBySeries
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeries relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/editors/{editor_id}/series/{series_id}/collections:
    get:
      description: List collections by print-editor-series
      operationId: relationPrintsEditors#listCollectionsBySeries
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollectionsBySeries relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/editors/{editor_id}/series/{series_id}/collections/{collection_id}/books:
    get:
      description: List books by print-editor-series-collection
      operationId: relationPrintsEditors#listBooksBySeriesCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksBySeriesCollection relationPrintsEditors
      tags:
      - relationPrintsEditors
  /prints/{print_id}/series:
    get:
      description: List series by print
      operationId: relationPrints#listSeries
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeries relationPrints
      tags:
      - relationPrints
  /prints/{print_id}/series/{series_id}/books:
    get:
      description: List books by print-series
      operationId: relationPrintsSeries#listBooks
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationPrintsSeries
      tags:
      - relationPrintsSeries
  /prints/{print_id}/series/{series_id}/collections:
    get:
      description: List collections by print-series
      operationId: relationPrintsSeries#listCollections
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationPrintsSeries
      tags:
      - relationPrintsSeries
  /prints/{print_id}/series/{series_id}/collections/{collection_id}/books:
    get:
      description: List books by print-series-collection
      operationId: relationPrintsSeries#listBooksByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollection relationPrintsSeries
      tags:
      - relationPrintsSeries
  /prints/{print_id}/series/{series_id}/collections/{collection_id}/editors:
    get:
      description: List editors by print-series-collection
      operationId: relationPrintsSeries#listEditorsByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.editor+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EditorCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listEditorsByCollection relationPrintsSeries
      tags:
      - relationPrintsSeries
  /prints/{print_id}/series/{series_id}/collections/{collection_id}/editors/{editor_id}/books:
    get:
      description: List books by print-series-collection-editor
      operationId: relationPrintsSeries#listBooksByCollectionEditor
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollectionEditor relationPrintsSeries
      tags:
      - relationPrintsSeries
  /prints/{print_id}/series/{series_id}/editors:
    get:
      description: List editors by print-series
      operationId: relationPrintsSeries#listEditors
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.editor+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EditorCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listEditors relationPrintsSeries
      tags:
      - relationPrintsSeries
  /prints/{print_id}/series/{series_id}/editors/{editor_id}/books:
    get:
      description: List books by print-series-editor
      operationId: relationPrintsSeries#listBooksByEditor
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByEditor relationPrintsSeries
      tags:
      - relationPrintsSeries
  /prints/{print_id}/series/{series_id}/editors/{editor_id}/collections:
    get:
      description: List collections by print-series-editor
      operationId: relationPrintsSeries#listCollectionsByEditor
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollectionsByEditor relationPrintsSeries
      tags:
      - relationPrintsSeries
  /prints/{print_id}/series/{series_id}/editors/{editor_id}/collections/{collection_id}/books:
    get:
      description: List books by print-series-editor-collection
      operationId: relationPrintsSeries#listBooksByEditorCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByEditorCollection relationPrintsSeries
      tags:
      - relationPrintsSeries
  /roles:
    get:
      description: List roles
      operationId: roles#list
      produces:
      - application/vnd.role+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RoleCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list roles
      tags:
      - roles
    post:
      description: Create new role
      operationId: roles#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateRolesPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /roles/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create roles
      tags:
      - roles
  /roles/{role_id}:
    delete:
      description: delete role by id
      operationId: roles#delete
      parameters:
      - description: Unique Role ID
        in: path
        minimum: 1
        name: role_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete roles
      tags:
      - roles
    get:
      description: Get role by id
      operationId: roles#show
      parameters:
      - description: Unique Role ID
        in: path
        minimum: 1
        name: role_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.role+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show roles
      tags:
      - roles
    put:
      description: Update role by id
      operationId: roles#update
      parameters:
      - description: Unique Role ID
        in: path
        minimum: 1
        name: role_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateRolesPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update roles
      tags:
      - roles
  /roles/{role_id}/authors:
    get:
      description: List authors by role
      operationId: relationRole#listAuthors
      parameters:
      - description: Unique Role ID
        in: path
        minimum: 1
        name: role_id
        required: true
        type: integer
      produces:
      - application/vnd.author+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthorCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listAuthors relationRole
      tags:
      - relationRole
  /roles/{role_id}/authors/{author_id}/series:
    get:
      description: List series by role and author
      operationId: relationRole#listSeriesByAuthor
      parameters:
      - description: Unique Author ID
        in: path
        minimum: 1
        name: author_id
        required: true
        type: integer
      - description: Unique Role ID
        in: path
        minimum: 1
        name: role_id
        required: true
        type: integer
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listSeriesByAuthor relationRole
      tags:
      - relationRole
  /series:
    get:
      description: List series
      operationId: series#list
      produces:
      - application/vnd.series+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: list series
      tags:
      - series
    post:
      description: Create new series
      operationId: series#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateSeriesPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /series/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create series
      tags:
      - series
  /series/{series_id}:
    delete:
      description: delete serie by id
      operationId: series#delete
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete series
      tags:
      - series
    get:
      description: Get serie by id
      operationId: series#show
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.series+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Series'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: show series
      tags:
      - series
    put:
      description: Update serie by id
      operationId: series#update
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateSeriesPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update series
      tags:
      - series
  /series/{series_id}/books:
    get:
      description: List books by series
      operationId: relationSeries#listBooks
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationSeries
      tags:
      - relationSeries
  /series/{series_id}/classifications:
    get:
      description: List series classes
      operationId: classifications#list
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.classification+json; type=collection
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ClassificationCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: list classifications
      tags:
      - classifications
    post:
      description: Create new series classification
      operationId: classifications#create
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateClassificationsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /classes/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create classifications
      tags:
      - classifications
  /series/{series_id}/classifications/{class_id}:
    delete:
      description: delete series classification
      operationId: classifications#delete
      parameters:
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete classifications
      tags:
      - classifications
    get:
      description: Get series classification
      operationId: classifications#show
      parameters:
      - description: Unique Class ID
        in: path
        minimum: 1
        name: class_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.classification+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Classification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: show classifications
      tags:
      - classifications
  /series/{series_id}/collections:
    get:
      description: List collections by series
      operationId: relationSeries#listCollections
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationSeries
      tags:
      - relationSeries
  /series/{series_id}/collections/{collection_id}/books:
    get:
      description: List books by series-collection
      operationId: relationSeriesCollections#listBooks
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationSeriesCollections
      tags:
      - relationSeriesCollections
  /series/{series_id}/collections/{collection_id}/prints:
    get:
      description: List prints by series-collection
      operationId: relationSeriesCollections#listPrints
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrints relationSeriesCollections
      tags:
      - relationSeriesCollections
  /series/{series_id}/collections/{collection_id}/prints/{print_id}/books:
    get:
      description: List books by series-collection-print
      operationId: relationSeriesCollections#listBooksByPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrint relationSeriesCollections
      tags:
      - relationSeriesCollections
  /series/{series_id}/editors:
    get:
      description: List editors by series
      operationId: relationSeries#listEditors
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.editor+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EditorCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listEditors relationSeries
      tags:
      - relationSeries
  /series/{series_id}/editors/{editor_id}/books:
    get:
      description: List books by series-editor
      operationId: relationSeriesEditors#listBooks
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/editors/{editor_id}/collections:
    get:
      description: List collections by series-editor
      operationId: relationSeriesEditors#listCollections
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/editors/{editor_id}/collections/{collection_id}/books:
    get:
      description: List books by series-editor-collection
      operationId: relationSeriesEditors#listBooksByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollection relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/editors/{editor_id}/collections/{collection_id}/prints:
    get:
      description: List prints by series-editor-collection
      operationId: relationSeriesEditors#listPrintsByCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrintsByCollection relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/editors/{editor_id}/collections/{collection_id}/prints/{print_id}/books:
    get:
      description: List books by series-editor-collection-print
      operationId: relationSeriesEditors#listBooksByCollectionPrint
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByCollectionPrint relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/editors/{editor_id}/prints:
    get:
      description: List prints by series-editor
      operationId: relationSeriesEditors#listPrints
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrints relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/editors/{editor_id}/prints/{print_id}/books:
    get:
      description: List books by series-editor-print
      operationId: relationSeriesEditors#listBooksByPrint
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrint relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/editors/{editor_id}/prints/{print_id}/collections:
    get:
      description: List collections by series-editor-print
      operationId: relationSeriesEditors#listCollectionsByPrint
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollectionsByPrint relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/editors/{editor_id}/prints/{print_id}/collections/{collection_id}/books:
    get:
      description: List books by series-editor-print-collection
      operationId: relationSeriesEditors#listBooksByPrintCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByPrintCollection relationSeriesEditors
      tags:
      - relationSeriesEditors
  /series/{series_id}/prints:
    get:
      description: List prints by series
      operationId: relationSeries#listPrints
      parameters:
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.print+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrintCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listPrints relationSeries
      tags:
      - relationSeries
  /series/{series_id}/prints/{print_id}/books:
    get:
      description: List books by series-print
      operationId: relationSeriesPrints#listBooks
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooks relationSeriesPrints
      tags:
      - relationSeriesPrints
  /series/{series_id}/prints/{print_id}/collections:
    get:
      description: List collections by series-print
      operationId: relationSeriesPrints#listCollections
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollections relationSeriesPrints
      tags:
      - relationSeriesPrints
  /series/{series_id}/prints/{print_id}/editors:
    get:
      description: List editors by series-print
      operationId: relationSeriesPrints#listEditors
      parameters:
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.editor+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EditorCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listEditors relationSeriesPrints
      tags:
      - relationSeriesPrints
  /series/{series_id}/prints/{print_id}/editors/{editor_id}/books:
    get:
      description: List books by series-print-editor
      operationId: relationSeriesPrints#listBooksByEditor
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByEditor relationSeriesPrints
      tags:
      - relationSeriesPrints
  /series/{series_id}/prints/{print_id}/editors/{editor_id}/collections:
    get:
      description: List collections by series-print-editor
      operationId: relationSeriesPrints#listCollectionsByEditor
      parameters:
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.collection+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listCollectionsByEditor relationSeriesPrints
      tags:
      - relationSeriesPrints
  /series/{series_id}/prints/{print_id}/editors/{editor_id}/collections/{collection_id}/books:
    get:
      description: List books by series-print-editor-collection
      operationId: relationSeriesPrints#listBooksByEditorCollection
      parameters:
      - description: Unique Collection ID
        in: path
        minimum: 1
        name: collection_id
        required: true
        type: integer
      - description: Unique Editor ID
        in: path
        minimum: 1
        name: editor_id
        required: true
        type: integer
      - description: Unique Print ID
        in: path
        minimum: 1
        name: print_id
        required: true
        type: integer
      - description: Unique Series ID
        in: path
        minimum: 1
        name: series_id
        required: true
        type: integer
      produces:
      - application/vnd.book+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BookCollection'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: listBooksByEditorCollection relationSeriesPrints
      tags:
      - relationSeriesPrints
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download public/swagger/swagger.json
  /token/access_token:
    get:
      description: Get access
      operationId: token#access
      produces:
      - application/vnd.goa.error
      - application/vnd.token+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: access token
      tags:
      - token
  /token/auth:
    get:
      description: Get users
      operationId: token#auth
      produces:
      - application/vnd.authtoken+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Authtoken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: auth token
      tags:
      - token
  /users:
    get:
      description: 'Get users, optionnaly filtering by nickname or email '
      operationId: users#list
      parameters:
      - description: user email
        format: email
        in: query
        name: email
        required: false
        type: string
      - description: user nickname
        in: query
        maxLength: 32
        minLength: 1
        name: nickname
        required: false
        type: string
      produces:
      - application/vnd.user+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserCollection'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: list users
      tags:
      - users
    post:
      description: Create new user
      operationId: users#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserCreatePayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /users/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: create users
      tags:
      - users
  /users/{user_id}:
    delete:
      description: delete user by id
      operationId: users#delete
      parameters:
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete users
      tags:
      - users
    get:
      description: Get user by id
      operationId: users#show
      parameters:
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: show users
      tags:
      - users
    put:
      description: Update user by id
      operationId: users#update
      parameters:
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUsersPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: update users
      tags:
      - users
  /users/{user_id}/ownerships:
    get:
      description: List user ownerships
      operationId: ownerships#list
      parameters:
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.ownership+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OwnershipCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: list ownerships
      tags:
      - ownerships
    post:
      description: Create new user ownership
      operationId: ownerships#create
      parameters:
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateOwnershipsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /books/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: create ownerships
      tags:
      - ownerships
  /users/{user_id}/ownerships/{book_id}:
    delete:
      description: delete ownerships by ids
      operationId: ownerships#delete
      parameters:
      - description: Unique Book ID
        in: path
        minimum: 1
        name: book_id
        required: true
        type: integer
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: delete ownerships
      tags:
      - ownerships
    get:
      description: Get user ownerships by ids
      operationId: ownerships#show
      parameters:
      - description: Unique Book ID
        in: path
        minimum: 1
        name: book_id
        required: true
        type: integer
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - application/vnd.ownership+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Ownership'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: show ownerships
      tags:
      - ownerships
  /users/{user_id}/ownerships/isbn:
    post:
      description: Create new book and ownership by isbn
      operationId: ownerships#add
      parameters:
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddOwnershipsPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /books/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: add ownerships
      tags:
      - ownerships
  /validation:
    post:
      description: Validate user
      operationId: validation#validate
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ValidateValidationPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      summary: validate validation
      tags:
      - validation
  /validation/{user_id}:
    get:
      description: Get validation token
      operationId: validation#get
      parameters:
      - description: Unique User ID
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      schemes:
      - http
      security:
      - JWTSec: []
      summary: get validation
      tags:
      - validation
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  InternalServerError:
    description: Internal Server Error
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/Author'
  ServiceUnavailable:
    description: Service Unavailable
  Unauthorized:
    description: Unauthorized
  UnprocessableEntity:
    description: Unprocessable Entity
schemes:
- http
securityDefinitions:
  JWTSec:
    description: Use JWT to authenticate
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
